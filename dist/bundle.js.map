{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/animation.js","webpack:///./lib/board.js","webpack:///./lib/carrotcrush.js","webpack:///./lib/empty_space.js","webpack:///./lib/fruit.js","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/utility.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;AClFA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;ACpFA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,iBAAiB;AACrC,qBAAqB,oBAAoB;;AAEzC;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,iBAAiB;AACrC,qBAAqB,oBAAoB;;AAEzC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC;;AAEA;AACA;AACA,sBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;;;;;;;;;ACxNA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;ACRD;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACvBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;AClDA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uCAAuC,oBAAoB;AAC3D,6BAA6B,eAAe;AAC5C;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;;AAGA;;;;;;;;;;;;;;;;ACtFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;;;;;;;;;;;;AClBA;AAAA;;AAEA;AACA;AACA;;AAEA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/carrotcrush.js\");\n","import EmptySpace from './empty_space';\n\nconst Animation = {\n\n  // preShake(ctx) {\n  //   ctx.save();\n  //   let dx = Math.random() * 10;\n  //   let dy = Math.random() * 10;\n  //   ctx.translate(dx, dy);\n  // },\n  //\n  // postShake(ctx) {\n  //   ctx.restore();\n  // },\n  //\n  // shake(ctx, board) {\n  //   ctx.clearRect(0, 0, 480, 480);\n  //   Animation.preShake(ctx);\n  //   board.redraw(ctx);\n  //   Animation.postShake(ctx);\n  //   requestAnimationFrame(Animation.shake(ctx, board));\n  // },\n\n//\n  // swap(x1, x2, y1, y2, ctx, board) {\n  //   return  () => {\n  //     let shiftx = x1 - x2;\n  //     let shifty = y1 - y2;\n  //\n  //\n  //     let dx;\n  //     if (x1 > x2) {\n  //       dx = -2;\n  //     } else if (x1 < x2) {\n  //       dx = 2;\n  //     } else {\n  //       dx = 0;\n  //     }\n  //\n  //     let dy;\n  //     if (y1 > y2) {\n  //       dy = -2;\n  //     } else if (y1 < y2) {\n  //       dy = 2;\n  //     } else {\n  //       dy = 0;\n  //     }\n  //\n  //\n  //\n  //\n  //     if (dx === 0 && dy === 0) {\n  //       return;\n  //     }\n  //\n  //     x1 += dx;\n  //     y1 += dy;\n  //     x2 -= dx;\n  //     y2 -= dy;\n  //\n  //     ctx.beginPath();\n  //     ctx.save()\n  //     ctx.translate((dx), (dy));\n  //     board.redraw(x1, oldXPos, y1, oldYPos, ctx);\n  //     ctx.restore();\n  //     requestAnimationFrame(Animation.swap(x1, x2, y1, y2, ctx, board));\n  //   }\n  // }\n\n\n  shift(base, dy, ctx) {\n    if (dy >= base) {\n      return;\n    }\n\n    dy += (dy / 60);\n    ctx.save();\n    ctx.beginPath();\n    ctx.translate(0, (dy / 60));\n    ctx.restore();\n    requestAnimationFrame(Animation.shift(base, dy, ctx));\n  }\n}\n\nexport default Animation;\n","import Fruit from './fruit';\nimport EmptySpace from './empty_space';\nimport Utility from './utility';\nimport Animation from './animation';\n\nclass Board {\n  constructor(ctx) {\n    this.grid = new Array(6);\n    for (let i = 0; i < this.grid.length; i ++) {\n      this.grid[i] = (new Array(9))\n    }\n    this.populate();\n    this.ctx = ctx;\n    this.score = 0;\n    this.shift = this.shift.bind(this);\n    this.draw = this.draw.bind(this);\n  }\n\n  populate() {\n    for (let i = 0; i < this.grid.length; i++) {\n      for (let j = 0; j < this.grid[i].length; j++) {\n        let pos = [i, j]\n        this.grid[i][j] = new Fruit([i, (j - 3)]);\n      }\n    }\n    return this.grid;\n  }\n\n  isValidMove(fromMove, toMove) {\n    let xPos1 = fromMove[0];\n    let xPos2 = toMove[0];\n    let yPos1 = fromMove[1];\n    let yPos2 = toMove[1];\n\n    if ((xPos1 === 0) && (xPos2 !== 0 && xPos2 !== 1)) {\n      return false;\n    } else if ((xPos1 === this.grid.length) && (xPos2 !== xPos1 - 1) && (xPos2 !== this.grid.length)) {\n      return false;\n    } else if ((yPos1 === 0) && (yPos2 !== yPos1 + 1) && (yPos2 !== 0)) {\n      return false;\n    } else if ((yPos1 === this.grid.length) && (yPos2 !== yPos1 - 1) && (yPos2 !== this.grid.length)) {\n      return false;\n    } else if ((xPos2 < (xPos1 - 1)) || (xPos2 > xPos1 + 1)) {\n      return false;\n    } else if ((yPos2 < yPos1 - 1) || (yPos2 > yPos1 + 1)) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  moveFruit(fromMove, toMove) {\n    if (this.isValidMove(fromMove, toMove)) {\n      let firstVeg = this.grid[fromMove[0]][fromMove[1]];\n      let secondVeg = this.grid[toMove[0]][toMove[1]];\n\n      this.grid[toMove[0]][toMove[1]] = firstVeg;\n      this.grid[fromMove[0]][fromMove[1]] = secondVeg;\n\n      if (this.foundStreak()) {\n        this.getStreak();\n      } else {\n        this.grid[toMove[0]][toMove[1]] = secondVeg;\n        this.grid[fromMove[0]][fromMove[1]] = firstVeg;\n      }\n    } else {\n        alert('Invalid move')\n    }\n  }\n\n  foundStreak() {\n    let check1 = this.verticalCheck(this.grid);\n    let transGrid = Utility.transpose(this.grid);\n    let check2 = this.horizontalCheck(transGrid);\n\n    return (check1 || check2);\n  }\n\n  getStreak() {\n    let streak;\n    if (this.verticalCheck(this.grid)) {\n      streak = this.verticalCheck(this.grid);\n      this.eliminateStreak(streak);\n    }\n\n    let transGrid = Utility.transpose(this.grid);\n    if (this.horizontalCheck(transGrid)) {\n      streak = this.horizontalCheck(transGrid);\n      this.eliminateStreak(streak);\n    }\n  }\n\n  verticalCheck(grid) {\n    let currentStreak = [];\n\n    for (let i = 0 ; i < grid.length; i++) {\n      for (let j = 1; j < grid[i].length; j++) {\n\n        if (currentStreak.length === 0) {\n          currentStreak.push([i, (j - 1)]);\n        }\n\n        if (grid[i][j].type === grid[i][(j - 1)].type){\n          currentStreak.push([i, j]);\n        } else {\n          if (grid[i][j].type !== grid[i][(j - 1)].type) {\n\n            if (currentStreak.length >= 3) {\n              this.score += 50;\n              $(\".player-score\").text(this.score);\n              return currentStreak;\n            }\n\n            currentStreak = [];\n          }\n        }\n\n        if (j === grid.length - 1) {\n          if (currentStreak.length >= 3) {\n            this.score += 50;\n            $(\".player-score\").text(this.score);\n            return currentStreak;\n          }\n        }\n      }\n    }\n  }\n\n  horizontalCheck(grid) {\n    let currentStreak = [];\n    for (let i = 0 ; i < grid.length; i++) {\n      for (let j = 1; j < grid[i].length; j++) {\n\n        if (currentStreak.length === 0) {\n          currentStreak.push([i, (j - 1)]);\n        }\n        if (grid[i][j].type === grid[i][(j - 1)].type){\n          currentStreak.push([i, j]);\n        } else {\n          if (grid[i][j].type !== grid[i][(j - 1)].type) {\n\n            if (currentStreak.length >= 3) {\n              let reversedStreak = currentStreak.map ((pos) => {\n                return [pos[1], pos[0]];\n              });\n\n              this.score += 50;\n              $(\".player-score\").text(this.score);\n              return reversedStreak;\n            }\n\n            currentStreak = [];\n          }\n        }\n\n        if (j === grid.length - 1) {\n          if (currentStreak.length >= 3) {\n            let reversedStreak = currentStreak.map ((pos) => {\n              return [pos[1], pos[0]]\n            });\n\n            this.score += 50;\n            $(\".player-score\").text(this.score);\n            return reversedStreak;\n          }\n        }\n      }\n    }\n  }\n\n  eliminateStreak(streak) {\n    debugger\n    for (let i = 0; i < streak.length; i++) {\n      let pos = streak[i]\n      this.grid[pos[0]].unshift(new Fruit())\n      this.grid[pos[0]].splice(pos[1], 1, new EmptySpace([pos[0], pos[1]]));\n    }\n\n    this.draw();\n  }\n\n  shift(streak) {\n    // let col = streak[0][0];\n    //\n    // for (let i = 0; i < streak.length; i++) {\n    //   col.unshift(new Fruit())\n\n    // let shiftedCol = this.grid[col];\n    // let pos;\n    // for (let i = 1; i < shiftedCol.length; i++) {\n    //   if (shiftedCol[i].type === 'empty' && shiftedCol[i - 1].type !== 'empty') {\n    //     pos = [(col), (i - 1)];\n    //   }\n    // }\n    //\n    // let lastFruit = streak[streak.length - 1][1];\n    // let base = (lastFruit * 80);\n    // let top = (pos[1] * 80);\n    // let dy = Math.abs(top - base);\n\n  }\n\n  async draw() {\n    this.ctx.clearRect(0, 0, this.ctx.height, this.ctx.width);\n    requestAnimationFrame(this.draw);\n\n    for(let i = 0; i < this.grid.length; i++) {\n      for(let j = 3; j < this.grid[i].length; j++) {\n        let item = this.grid[i][j]\n        item.draw(this.ctx);\n      }\n    }\n  }\n}\n\n\nexport default Board;\n","import Game from \"./game\";\nimport GameView from './game_view';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n\n  const ctx = canvasEl.getContext(\"2d\");\n  new GameView(ctx).start();\n});\n","class EmptySpace {\n  constructor(pos) {\n    this.type = 'empty';\n    this.pos = pos;\n    this.vel = 0;\n    this.falling = false;\n  }\n\n  createImage() {\n    let img = new Image();\n    img.src = './images/emptyspace.png';\n    img.xpos = (this.pos[0] * 80);\n    img.ypos = (this.pos[1] * 80);\n    return img;\n  }\n\n  draw(ctx) {\n    let image = this.createImage();\n    ctx.clearRect(image.xpos, image.ypos, 80, 80);\n    ctx.drawImage(image, image.xpos, image.ypos, 80, 80);\n  }\n}\n\nexport default EmptySpace;\n","const DEFAULT = {\n  TYPE: [\n    \"carrot\",\n    \"blueberry\",\n    \"kiwi\",\n    \"pineapple\",\n    \"strawberry\",\n    \"banana\"]\n}\n\nconst ICONS = {\n  carrot: './images/carrot.png',\n  blueberry: './images/blueberry.png',\n  pineapple: './images/pineapple-icon.png',\n  banana: './images/banana.png',\n  strawberry: './images/strawberry-icon.png',\n  kiwi: './images/kiwi-icon.png'\n}\n\n\nclass Fruit {\n  constructor(pos) {\n    this.type = DEFAULT.TYPE[Math.floor(Math.random() * DEFAULT.TYPE.length)];;\n    this.pos = pos;\n    this.vel = 0;\n    this.falling = false;\n  }\n\n  createImage() {\n    let img = new Image();\n    img.src = ICONS[this.type];\n    img.xpos = (this.pos[0] * 80);\n    img.ypos = (this.pos[1] * 80);\n    return img;\n  }\n\n\n  draw(ctx) {\n    let image = this.createImage();\n    ctx.clearRect(image.xpos, image.ypos, 80, 80);\n    ctx.drawImage(image, image.xpos, image.ypos, 80, 80);\n  }\n\n  move(ctx) {\n    if (this.falling) {\n      pos[1] += vel;\n    }\n  }\n}\n\nexport default Fruit;\n","import Board from './board';\n\nclass Game {\n  constructor(board) {\n    this.objectiveScore = 1000;\n    this.movesLeft = 5;\n    this.board = board;\n    this.prevMove = null;\n\n    this.getMove = this.getMove.bind(this);\n    this.handleMove = this.handleMove.bind(this);\n\n    $(\"#canvas\").on('click', this.handleMove);\n    $(\".target-score\").text(`Target: ${this.objectiveScore}`);\n    $(\".moves-left\").text(`${this.movesLeft}`);\n  }\n\n  play() {\n  }\n\n  checkWon() {\n    if (this.movesLeft > 0 && this.board.score >= this.objectiveScore ) {\n      alert('yerr')\n    } else if (this.movesLeft === 0 && this.board.score !== this.objectiveScore) {\n      alert('naa boi')\n    } else if (this.movesLeft === 0 && this.board.score === this.objectiveScore) {\n      alert('yerr')\n    } else {\n      return null;\n    }\n  }\n\n  getMove(e) {\n    let y = e.offsetX;\n    let x = e.offsetY;\n\n    let pos = [];\n    if (y > 0 && y < 80) {\n      pos.push(0)\n    } else if (y >= 80 && y < 160) {\n      pos.push(1);\n    } else if (y >= 160 && y < 240) {\n      pos.push(2);\n    } else if (y >= 240 && y < 320) {\n      pos.push(3);\n    } else if (y >= 320 && y < 400) {\n      pos.push(4);\n    } else {\n      pos.push(5);\n    };\n\n    if (x > 0 && x < 80) {\n      pos.push(0)\n    } else if (x >= 80 && x < 160) {\n      pos.push(1);\n    } else if (x >= 160 && x < 240) {\n      pos.push(2);\n    } else if (x >= 240 && x < 320) {\n      pos.push(3);\n    } else if (x >= 320 && x < 400) {\n      pos.push(4);\n    } else {\n      pos.push(5);\n    };\n\n    return pos;\n  }\n\n  handleMove (e) {\n    if (this.prevMove) {\n      let fromMove = this.prevMove;\n      let toMove = this.getMove(e);\n\n      this.board.moveFruit(fromMove, toMove);\n      this.movesLeft -= 1;\n      $(\".moves-left\").text(`${this.movesLeft}`);\n      this.prevMove = false;\n      this.checkWon();\n    } else {\n      this.prevMove = this.getMove(e);\n    }\n  }\n\n}\n\n\nexport default Game;\n","import Board from './board';\nimport Game from './game';\n\nclass GameView {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.board = new Board(ctx);\n    this.game = new Game(this.board);\n  }\n\n  start() {\n    this.board.draw().then( () => {\n      this.board.getStreak();\n    });\n    this.game.play();\n  }\n}\n\nexport default GameView;\n","const Utility = {\n\n  transpose(array) {\n    return array[0].map((col, i) => array.map(row => row[i]));\n  }\n\n};\n\nexport default Utility;\n"],"sourceRoot":""}