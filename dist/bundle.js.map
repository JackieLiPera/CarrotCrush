{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/board.js","webpack:///./lib/carrotcrush.js","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/veggie.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;AClFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,mBAAmB,sBAAsB;AACzC,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;AACA,qBAAqB,sBAAsB;AAC3C;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B,kEAAkE;AAClE;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,sBAAsB;AAC1C;AACA,qBAAqB,sBAAsB;AAC3C;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA,wBAAwB;AACxB,+DAA+D;AAC/D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,kBAAkB,sBAAsB;AACxC,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;;;;;;;;;;;;;;;;ACzIA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;;;ACXA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;;;;;;;;;;;;;;;AC1BA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACdA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/carrotcrush.js\");\n","import Veggie from './veggie';\n\nconst icons = {\n  carrot: './images/carrot.ico',\n  tomato: './images/tomato.png',\n  cucumber: './images/cucumber.png',\n  potato: './images/potato.png',\n  raddish: './images/raddish.png',\n  broccoli: './images/broccoli.png'\n}\n\n\nclass Board {\n  constructor(ctx) {\n    this.icons = icons;\n    this.ctx = ctx;\n    this.grid = new Array(6);\n    for (let i = 0; i < this.grid.length; i ++) {\n      this.grid[i] = (new Array(6))\n    }\n    this.populate = this.populate.bind(this);\n    this.findTrios = this.findTrios.bind(this);\n    this.populate()\n    this.findTrios();\n  }\n\n\n  populate() {\n    for (let i = 0; i < this.grid.length; i++) {\n      for (let j = 0; j < this.grid.length; j++) {\n        this.grid[i][j] = new Veggie();\n      }\n    }\n    return this.grid\n  }\n\n  findTrios() {\n    let trios = [];\n\n    //horizontal check\n    for (let i = 0; i < this.grid.length; i++) {\n      let vegCount = 1;\n      for (let j = 0; j < this.grid.length; j++) {\n          let checked = false;\n\n          if (i === this.grid.length - 1) {\n            checked = true;\n          } else {\n              if (this.grid[i][j].type === this.grid[i+1][j].type &&\n                this.grid[i][j].type !== -1) {\n                vegCount += 1;\n              } else {\n                checked = true;\n              }\n          }\n\n          if (checked) {\n              if (vegCount >= 3) {\n                  trios.push({ column: i+1-vegCount, row:j,\n                              length: vegCount, horizontal: true });\n              }\n              vegCount = 1;\n          }\n      }\n    }\n\n    //vertical check\n    for (let i = 0 ; i < this.grid.length; i++) {\n      let vegCount = 1;\n      for (let j = 0; j < this.grid.length; j++) {\n        let checked = false;\n\n        if (j === this.grid.length - 1) {\n          checked = true;\n        } else {\n          if (this.grid[i][j].type === this.grid[i][j + 1].type &&\n            this.grid[i][j].type !== -1) {\n            vegCount += 1;\n          } else {\n            checked = true;\n          }\n        }\n\n        if (checked) {\n          if (vegCount >= 3) {\n            trios.push({ column: i, row: j + 1 - vegCount,\n                          length: vegCount, horizontal: false });\n          }\n\n          vegCount = 1;\n        }\n      }\n    }\n\n    return trios;\n  }\n\n  // reorganizeBoard() {\n  //   let numTrios = (this.grid.findTrios()).length;\n  //   while (numTrios > 1) {\n  //     this.grid.removeTrios();\n  //     this.grid.reshuffle();\n  //     this.grid.findTrios();\n  //   };\n  //\n  //   return this.grid;\n  // }\n  //\n  // numValidMoves() {\n  //\n  // }\n\n\n  draw(ctx) {\n    let images = [];\n    for(let i = 0; i < this.grid.length; i++) {\n      for(let j = 0; j < this.grid[i].length; j++) {\n        let img = new Image();\n        let veggieType = this.grid[i][j].type;\n        let source =  this.icons[veggieType];\n        img.xpos = (i * 80);\n        img.ypos = (j * 80);\n        img.src = source;\n        images.push(img)\n      }\n\n    }\n\n    images.forEach( (image) => {\n      image.onload = function() {\n        ctx.drawImage(image, image.xpos, image.ypos, 80, 80);\n      }\n    });\n  }\n}\n\n\nexport default Board;\n","import Game from \"./game\";\nimport GameView from './game_view';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n\n  const ctx = canvasEl.getContext(\"2d\");\n  const game = new Game();\n  new GameView(game, ctx).start();\n});\n\nwindow.findtrios = findTrios;\n","import Board from './board';\n\n\nclass Game {\n  constructor() {\n    this.points = 0;\n    this.maxPoints = 1000;\n    this.maxMoves = 10;\n    this.board = new Board();\n    this.won = null;\n  }\n\n  play() {\n    this.board.populate();\n  }\n\n  won() {\n    if (this.points >= this.maxPoints) {\n      this.woon = true;\n    }\n  }\n\n\n}\n\n\nexport default Game;\n","import Board from './board';\n\nclass GameView {\n  constructor(game, ctx) {\n    this.ctx = ctx;\n    this.game = game;\n    this.board = new Board();\n  }\n\n  start() {\n    this.board.draw(this.ctx);\n  }\n}\n\nexport default GameView;\n","const DEFAULT = {\n  TYPE: [\n    \"carrot\",\n    \"tomato\",\n    \"broccoli\",\n    \"cucumber\",\n    \"raddish\",\n    \"potato\"]\n}\n\nclass Veggie {\n  constructor() {\n    this.type = DEFAULT.TYPE[Math.floor(Math.random() * DEFAULT.TYPE.length)];\n  }\n}\n\nexport default Veggie;\n"],"sourceRoot":""}